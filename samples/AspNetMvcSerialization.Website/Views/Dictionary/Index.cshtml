@model AspNetMvcSerialization.Website.Models.DictionaryModel
@using AspNetMvcSerialization;

@* We need to import this namespace as otherwise our custom IDictionary<string, string> HtmlHelper overload would not be called *@

@{
    ViewBag.Title = "IDictionary<string, string> serialization";
}

<h2>@ViewBag.Title</h2>

@if (IsPost)
{
    <p>The values below were de-serialized from the submitted form.</p>
}
else
{
    <p>Click on submit to submit the form and see if the dictionary is correctly de-serialized.</p>
}

@using (Html.BeginForm())
{
    // Here we will be serializing the dictionary using our custom HtmlHelper. By correctly serializing the
    // dictionary into the correct format (see http://www.hanselman.com/blog/ASPNETWireFormatForModelBindingToArraysListsCollectionsDictionaries.aspx)
    // the default model binder will be able to correct de-serialize the submitted dictionary
    @Html.Editor(Html.NameFor(m => m.Dictionary).ToString(), Model.Dictionary)
    
    <input type="submit" value="Submit" />
}


<ul>
    <li>
        @Html.ActionLink("EditorFor", "Index", "Dictionary")
        @Html.ActionLink("HiddenFor", "Hidden", "Dictionary")
    </li>
</ul>